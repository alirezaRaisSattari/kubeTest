apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: system-user
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: init-postgres
        image: postgres:13
        command: ['sh', '-c', 'until pg_isready -h postgres -p 5432 -U admin; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
      containers:
      - name: backend
        image: backend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8000
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /ready
        #     port: 8000
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: init-script
        configMap:
          name: init-script
          defaultMode: 0755
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: system-user
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: system-user
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: backend
